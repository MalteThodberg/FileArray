% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClasses.R, R/writeFileArray.R
\docType{class}
\name{FileArray-class}
\alias{FileArray-class}
\alias{FileMatrix-class}
\alias{FileArray}
\alias{writeFileArray}
\title{FileArray: DelayedArray backend for filematrix.}
\usage{
FileArray(filepath)

writeFileArray(x, filepath = tempfile())
}
\arguments{
\item{filepath}{character: Path to the basename of a filematrix}

\item{x}{matrix, DelayedArray, etc.: matrix-like object to be written block-by-block to disk.}
}
\value{
A FileMatrix object (A 2D FileArray)
}
\description{
FileArray allows you to use the filematrix package as a backend for DelayedArrays, similarly to the default HDF5Array package.
}
\details{
FileArraySeed, FileArray, FileMatrix, FileRealizationSink, read-only / open connections.
}
\examples{
#### Examples ####

mat <- as.matrix(iris[,-5])

# Coerce a matrix to a FileArray using a temporary filematrix backing file:
as(mat, "FileArray")

# Use writeFileArray to specify the location of the backing file:
my_backing_file <- tempfile(pattern="filematrix")
writeFileArray(mat, filepath=tempfile())

# Create a FileArray directly from a filematrix backing file
manual_backing_file <- tempfile(pattern="filematrix")
filematrix::fm.create.from.matrix(mat=mat, filenamebase=manual_backing_file)
FileArray(manual_backing_file)

# FileArray supports all DelayedArray operations. See vignette for examples.

#### Sanity checks ####

# Check that matrix can be converted to/from
dbl_mat <- replicate(n = 25, rnorm(1000))
int_mat <- round(dbl_mat * 100)
lgl_mat <- int_mat > 0

dbl_fa <- as(dbl_mat, "FileArray")
int_fa <- as(int_mat, "FileArray")
lgl_fa <- as(lgl_mat, "FileArray")

stopifnot(as.matrix(dbl_fa) == dbl_mat,
          as.matrix(int_fa) == int_mat,
          as.matrix(lgl_fa) == lgl_mat)

# Check that empty matrices works
rows_mat <-  matrix(nrow = 0, ncol=10)
cols_mat <-  matrix(nrow = 10, ncol=0)
both_mat <- matrix(nrow=0, ncol=0)

rows_fa <- as(rows_mat, "FileArray")
cols_fa <- as(cols_mat, "FileArray")
both_fa <- as(both_mat, "FileArray")

stopifnot(as.matrix(rows_fa) == rows_mat,
          as.matrix(cols_fa) == cols_mat,
          as.matrix(both_fa) == both_mat)
}
